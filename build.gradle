//定义不同工程类型
def microprojects = [project(':spring-cloud-registry-microservice'),project(':spring-cloud-gateway-microservice'),project(':spring-cloud-auth-microservice')]
//def webprojects = [project(':cmcciot-meter-admin-microservice')]

buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		//配置仓库
		maven { url "https://repo.spring.io/libs-milestone/" }
        jcenter()
		//mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

//为所有gradle project引入springcloud公共依赖
allprojects {
	
	apply plugin: "java"
    apply plugin: "application"
    //所有项目都是spring boot项目
    apply plugin: "org.springframework.boot"
    //生成eclipse工程所需目录
    apply plugin: "eclipse"
    //使用idea ide的打开此配置，关闭上面eclipse配置
    apply plugin: "idea"
    //可以使用maven指令
    apply plugin: "maven"
    apply plugin: "io.spring.dependency-management"
    
    repositories {
    	//全部从私服内部仓库更新包
        //maven { url saas_repos }
        maven {url "https://repo.spring.io/libs-release"}
        maven {url "https://repo.spring.io/libs-snapshot"}
	    maven {url "https://repo.spring.io/milestone"}
        jcenter()
        //mavenCentral()
        
    }
    configurations {
        //日志框架，项目采用spring boot默认的logback框架
        //compile.exclude group: "ch.qos.logback"
        compile.exclude group: "com.amazonaws"
    }
    dependencyManagement {
        imports {
            //spring bom helps us to declare dependencies without specifying version numbers.
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}

group = 'com.cmcciot.meter'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
